# basetype-image

prototype(WebExcess.BaseTypes:ImageObject) >
prototype(WebExcess.BaseTypes:ImageObject) < prototype(Neos.Fusion:Tag) {
	tagName = 'img'

	config = ${Configuration.setting('WebExcess.BaseTypes')}

	# globals..
	@context {
		config = ${this.config}
		asset = ${this.asset}
		imageMaxWidth = ${this.imageMaxWidth}
		imageMaxHeight = ${this.imageMaxHeight}
		imageCropping = ${this.imageCropping}
		imageUpScaling = ${this.imageUpScaling}
	}

	# changeables..
	asset = ${q(node).property('asset')}
	imageMaxWidth = ${this.asset.width > this.config.Image.maxWidth ? this.config.Image.maxWidth : this.asset.width}
	imageMaxHeight = ${this.asset.height > this.config.Image.maxHeight ? this.config.Image.maxHeight : this.asset.height}
	imageCropping = ${this.config.Image.cropping}
	imageUpScaling = ${this.config.Image.upScaling}

	# logic..
	attributes = Neos.Fusion:Attributes {
		src = Neos.Fusion:Case {
			hasImage {
				condition = ${asset}
				renderer = Neos.Neos:ImageUri {
					asset = ${asset}
					maximumWidth = ${Math.ceil(imageMaxWidth / 2)}
					maximumHeight = ${Math.ceil(imageMaxHeight / 2)}
					allowCropping = ${imageCropping}
					allowUpScaling = ${imageUpScaling}
				}
			}
			default {
				condition = true
				renderer = Neos.Fusion:ResourceUri {
					package = 'Neos.Neos'
					path = 'resource://Neos.Neos/Public/Images/dummy-image.svg'
				}
			}
		}

		srcset = Neos.Fusion:Array {
			50 = Neos.Neos:ImageUri {
				asset = ${asset}
				maximumWidth = ${Math.ceil(asset.width / 4)}
				maximumHeight = ${Math.ceil(asset.height / 4)}
				allowCropping = ${imageCropping}
				allowUpScaling = ${imageUpScaling}
				@process.addResolution = ${value + ' 0.5x'}
			}
			100 = Neos.Neos:ImageUri {
				asset = ${asset}
				maximumWidth = ${Math.ceil(asset.width / 2)}
				maximumHeight = ${Math.ceil(asset.height / 2)}
				allowCropping = ${imageCropping}
				allowUpScaling = ${imageUpScaling}
				@process.addResolution = ${', ' + value + ' 1x'}
			}
			# original image..
			200 = Neos.Neos:ImageUri {
				asset = ${asset}
				maximumWidth = ${asset.width}
				maximumHeight = ${asset.height}
				allowCropping = ${imageCropping}
				allowUpScaling = ${imageUpScaling}
				@process.addResolution = ${', ' + value + ' 2x'}
			}
			@if.hasAsset = ${asset}
		}

		title = Neos.Fusion:Case {
			hasImage {
				condition = ${asset}
				renderer = ${asset.title}
			}
		}

		alt = Neos.Fusion:Case {
			hasImage {
				condition = ${asset}
				renderer = ${asset.title}
			}
		}
	}
}
