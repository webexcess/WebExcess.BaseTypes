# basetype-grid

prototype(WebExcess.BaseTypes:GridObject) >
prototype(WebExcess.BaseTypes:GridObject) < prototype(WebExcess.BaseTypes:Content) {
    @context {
        layoutSM = ${q(node).property('gridLayoutSM')}
        layoutMD = ${q(node).property('gridLayoutMD')}
        layoutLG = ${q(node).property('gridLayoutLG')}
        layoutXL = ${q(node).property('gridLayoutXL')}
        cols = ${q(node).children('[instanceof Neos.Neos:ContentCollection]').get()}
    }

	attributes.class = Neos.Fusion:RawArray {
        nodeTypeName = 'basetype-grid'
        row = ${q(cols).count() >= 2 ? 'row' : false}
	}

    content = Neos.Fusion:Collection {
        collection = ${cols}
        itemName = 'node'
        iterationName = 'iteration'
        itemRenderer = WebExcess.BaseTypes:GridObject.ContentCollection
    }
}

prototype(WebExcess.BaseTypes:GridObject.ContentCollection) < prototype(Neos.Fusion:Tag) {
    attributes.class = Neos.Fusion:RawArray {
        column = 'column'
        xs = 'col-xs-12'
        sm = ${layoutSM ? 'col-sm-' + String.split(layoutSM, '-')[iteration.index] : false}
        md = ${layoutMD ? 'col-md-' + String.split(layoutMD, '-')[iteration.index] : false}
        lg = ${layoutLG ? 'col-lg-' + String.split(layoutLG, '-')[iteration.index] : false}
        xl = ${layoutXL ? 'col-xl-' + String.split(layoutXL, '-')[iteration.index] : false}
    }
    content = Neos.Neos:ContentCollection
}
